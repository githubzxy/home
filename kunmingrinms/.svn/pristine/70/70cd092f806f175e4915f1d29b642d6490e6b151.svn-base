package com.enovell.yunwei.system.web;

import com.enovell.system.common.domain.Organization;
import com.enovell.system.common.domain.User;
import com.enovell.yunwei.common.dto.ResultMsg;
import com.enovell.yunwei.system.annotation.LoginAnnotation;
import com.enovell.yunwei.system.domain.Menu;
import com.enovell.yunwei.system.service.MenuService;
import com.enovell.yunwei.system.service.UserService;
import com.enovell.yunwei.util.MD5Util;
import com.enovell.yunwei.util.jsonInterface.MixInOrganization;
import com.enovell.yunwei.util.jsonInterface.MixInUser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.apache.commons.lang.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.annotation.Resource;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.util.List;

/**用户登录控制器
 * @author roy
 * 2014年8月29日-上午11:22:08
 */
@Controller
@RequestMapping("/login")
public class LoginAction {

	@Resource(name="userService")
	private UserService userService;
	
	@Resource(name="menuService")
	private MenuService menuService;
	
	@RequestMapping(value="/in")
	@LoginAnnotation(content = "登录系统")
	public @ResponseBody String login(@RequestParam("userName")String userName,
			@RequestParam("password")String password,
			HttpServletRequest request,
			HttpServletResponse response){
		ResultMsg m = new ResultMsg();
		String jcb = request.getParameter("jsoncallback");
		try {
			userName = URLDecoder.decode(userName,"UTF-8");
		} catch (UnsupportedEncodingException e1) {
			e1.printStackTrace();
		}
		try{
			User user = userService.getUserByName(userName);
			if(user == null){//用户不存在
				m = new ResultMsg();
				m.setStatus(ResultMsg.FAIL_STATUS);
				m.setMsg("user");
				return jcb + "(" + javaToJsonAsString(m) + ")";
			}
			if(!user.getPassword().equals(MD5Util.toMD5(password))){
				m.setStatus(ResultMsg.FAIL_STATUS);
				m.setMsg("password");
				return jcb + "(" + javaToJsonAsString(m) + ")";
			}
			m.setStatus(ResultMsg.SUC_STATUS);
			m.setData(user);
			
			// 将用户id存放到Cookie中（kunmingrinmsJbossClient会从Cookie取出用户）
			Cookie c = new Cookie("railwayUser", user.getId());
			c.setMaxAge(-1);
			c.setPath("/");
			response.addCookie(c);
			
			// 将user存入session中
			HttpSession session = request.getSession();
			session.setAttribute("user", user);
			session.setAttribute("userId", user.getId());
			return jcb + "(" + javaToJsonAsString(m) + ")";
		}catch(Exception e){
			e.printStackTrace();
			m.setStatus(ResultMsg.FAIL_STATUS);
			m.setMsg("system");
			return jcb + "(" + javaToJsonAsString(m) + ")";
		}
	}
	
	@RequestMapping(value="/inSystem")
	public @ResponseBody String inSystem(@RequestParam("userName")String userName,
			@RequestParam("password")String password,
			HttpServletRequest request,
			HttpServletResponse response){
		ResultMsg m = new ResultMsg();
		try {
			userName = URLDecoder.decode(userName,"UTF-8");
		} catch (UnsupportedEncodingException e1) {
			e1.printStackTrace();
		}
		try{
			User user = userService.getUserByName(userName);
			if(user == null){//用户不存在
				m = new ResultMsg();
				m.setStatus(ResultMsg.FAIL_STATUS);
				m.setMsg("user");
				return javaToJsonAsString(m);
			}
			if(!user.getPassword().equals(MD5Util.toMD5(password))){
				m.setStatus(ResultMsg.FAIL_STATUS);
				m.setMsg("password");
				return javaToJsonAsString(m);
			}
			m.setStatus(ResultMsg.SUC_STATUS);
			m.setData(user);
			
			// 将user存入session中
			HttpSession session = request.getSession();
			session.setAttribute("user", user);
			session.setAttribute("userId", user.getId());
			return javaToJsonAsString(m);
		}catch(Exception e){
			e.printStackTrace();
			m.setStatus(ResultMsg.FAIL_STATUS);
			m.setMsg("system");
			return javaToJsonAsString(m);
		}
	}
	
	public String javaToJsonAsString(Object obj) {
		String jsonAsString = "";
		try {
			ObjectMapper objectMapper = new ObjectMapper();
			// 指定Organization对象通过MixInOrganization中的@JsonIgnoreProperties属性值进行过滤
			objectMapper.addMixInAnnotations(Organization.class, MixInOrganization.class);
			// 指定User对象通过MixInUser中的@JsonIgnoreProperties属性值进行过滤
			objectMapper.addMixInAnnotations(User.class, MixInUser.class);
			// 将java转换为json对象的字符串
			jsonAsString = objectMapper.writeValueAsString(obj);
		} catch (JsonProcessingException e) {
			e.printStackTrace();
		}
		return jsonAsString;
	}
	
	@RequestMapping(value="/main")
	public String main(HttpServletRequest request){
		Object userObj = request.getSession().getAttribute("user");
		String menuId=request.getParameter("menuId");
		request.setAttribute("menuId", menuId);
		if(userObj == null){
			String userId = null;
			Cookie[] cookies = request.getCookies();
			for(Cookie c : cookies){
				if(c.getName().equals("railwayUser")){
					userId = c.getValue();
					break;
				}
			}
			if(StringUtils.isBlank(userId)){
				return "login";
			}
			userObj = userService.getUserById(userId.toString());
			request.getSession().setAttribute("user", userObj);
		}
		
		return "main";
	}
	@RequestMapping(value="/toMain")
	public String toMain(HttpServletRequest request){
		Object userObj = request.getSession().getAttribute("user");
		String menuId=request.getParameter("menuId");
		request.setAttribute("menuId", menuId);
		if(userObj == null){
				return "login";
		}
		request.getSession().setAttribute("user", userObj);
		
		return "main";
	}
	
	@RequestMapping(value="/user",method=RequestMethod.POST)
	@ResponseBody
	public User getLoginedUser(HttpServletRequest request){
		return (User) request.getSession().getAttribute("user");
	}
	
	@RequestMapping(value="/out",method=RequestMethod.GET)
	@LoginAnnotation(content = "退出系统")
	public String logout(HttpServletRequest request){
		request.getSession().removeAttribute("user");
		request.getSession().invalidate();
		return "login";
	}
	
	@RequestMapping(value="/outSystem")
	public String outSystem(HttpServletRequest request){
		request.getSession().removeAttribute("user");
		request.getSession().invalidate();
		return "index";
	}
	
	@RequestMapping(value="/menu")
	@ResponseBody
	public List<Menu> getUserMenu(HttpServletRequest request){
		User user = (User) request.getSession().getAttribute("user");
		return menuService.getMenuByUser(user);
	}

}
